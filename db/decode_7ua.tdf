--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone IV E" LPM_DECODES=12 LPM_WIDTH=4 data enable eq
--VERSION_BEGIN 12.1 cbx_cycloneii 2012:11:07:18:03:51:SJ cbx_lpm_add_sub 2012:11:07:18:03:51:SJ cbx_lpm_compare 2012:11:07:18:03:51:SJ cbx_lpm_decode 2012:11:07:18:03:51:SJ cbx_mgl 2012:11:07:18:06:30:SJ cbx_stratix 2012:11:07:18:03:51:SJ cbx_stratixii 2012:11:07:18:03:51:SJ  VERSION_END


-- Copyright (C) 1991-2012 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.



--synthesis_resources = lut 18 
SUBDESIGN decode_7ua
( 
	data[3..0]	:	input;
	enable	:	input;
	eq[11..0]	:	output;
) 
VARIABLE 
	data_wire[3..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[11..0]	: WIRE;
	eq_wire[15..0]	: WIRE;
	w_anode3140w[1..0]	: WIRE;
	w_anode3149w[3..0]	: WIRE;
	w_anode3166w[3..0]	: WIRE;
	w_anode3176w[3..0]	: WIRE;
	w_anode3186w[3..0]	: WIRE;
	w_anode3196w[3..0]	: WIRE;
	w_anode3206w[3..0]	: WIRE;
	w_anode3216w[3..0]	: WIRE;
	w_anode3226w[3..0]	: WIRE;
	w_anode3238w[1..0]	: WIRE;
	w_anode3245w[3..0]	: WIRE;
	w_anode3256w[3..0]	: WIRE;
	w_anode3266w[3..0]	: WIRE;
	w_anode3276w[3..0]	: WIRE;
	w_anode3286w[3..0]	: WIRE;
	w_anode3296w[3..0]	: WIRE;
	w_anode3306w[3..0]	: WIRE;
	w_anode3316w[3..0]	: WIRE;
	w_data3138w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[11..0] = eq_wire[11..0];
	eq_wire[] = ( ( w_anode3316w[3..3], w_anode3306w[3..3], w_anode3296w[3..3], w_anode3286w[3..3], w_anode3276w[3..3], w_anode3266w[3..3], w_anode3256w[3..3], w_anode3245w[3..3]), ( w_anode3226w[3..3], w_anode3216w[3..3], w_anode3206w[3..3], w_anode3196w[3..3], w_anode3186w[3..3], w_anode3176w[3..3], w_anode3166w[3..3], w_anode3149w[3..3]));
	w_anode3140w[] = ( (w_anode3140w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode3149w[] = ( (w_anode3149w[2..2] & (! w_data3138w[2..2])), (w_anode3149w[1..1] & (! w_data3138w[1..1])), (w_anode3149w[0..0] & (! w_data3138w[0..0])), w_anode3140w[1..1]);
	w_anode3166w[] = ( (w_anode3166w[2..2] & (! w_data3138w[2..2])), (w_anode3166w[1..1] & (! w_data3138w[1..1])), (w_anode3166w[0..0] & w_data3138w[0..0]), w_anode3140w[1..1]);
	w_anode3176w[] = ( (w_anode3176w[2..2] & (! w_data3138w[2..2])), (w_anode3176w[1..1] & w_data3138w[1..1]), (w_anode3176w[0..0] & (! w_data3138w[0..0])), w_anode3140w[1..1]);
	w_anode3186w[] = ( (w_anode3186w[2..2] & (! w_data3138w[2..2])), (w_anode3186w[1..1] & w_data3138w[1..1]), (w_anode3186w[0..0] & w_data3138w[0..0]), w_anode3140w[1..1]);
	w_anode3196w[] = ( (w_anode3196w[2..2] & w_data3138w[2..2]), (w_anode3196w[1..1] & (! w_data3138w[1..1])), (w_anode3196w[0..0] & (! w_data3138w[0..0])), w_anode3140w[1..1]);
	w_anode3206w[] = ( (w_anode3206w[2..2] & w_data3138w[2..2]), (w_anode3206w[1..1] & (! w_data3138w[1..1])), (w_anode3206w[0..0] & w_data3138w[0..0]), w_anode3140w[1..1]);
	w_anode3216w[] = ( (w_anode3216w[2..2] & w_data3138w[2..2]), (w_anode3216w[1..1] & w_data3138w[1..1]), (w_anode3216w[0..0] & (! w_data3138w[0..0])), w_anode3140w[1..1]);
	w_anode3226w[] = ( (w_anode3226w[2..2] & w_data3138w[2..2]), (w_anode3226w[1..1] & w_data3138w[1..1]), (w_anode3226w[0..0] & w_data3138w[0..0]), w_anode3140w[1..1]);
	w_anode3238w[] = ( (w_anode3238w[0..0] & data_wire[3..3]), enable_wire);
	w_anode3245w[] = ( (w_anode3245w[2..2] & (! w_data3138w[2..2])), (w_anode3245w[1..1] & (! w_data3138w[1..1])), (w_anode3245w[0..0] & (! w_data3138w[0..0])), w_anode3238w[1..1]);
	w_anode3256w[] = ( (w_anode3256w[2..2] & (! w_data3138w[2..2])), (w_anode3256w[1..1] & (! w_data3138w[1..1])), (w_anode3256w[0..0] & w_data3138w[0..0]), w_anode3238w[1..1]);
	w_anode3266w[] = ( (w_anode3266w[2..2] & (! w_data3138w[2..2])), (w_anode3266w[1..1] & w_data3138w[1..1]), (w_anode3266w[0..0] & (! w_data3138w[0..0])), w_anode3238w[1..1]);
	w_anode3276w[] = ( (w_anode3276w[2..2] & (! w_data3138w[2..2])), (w_anode3276w[1..1] & w_data3138w[1..1]), (w_anode3276w[0..0] & w_data3138w[0..0]), w_anode3238w[1..1]);
	w_anode3286w[] = ( (w_anode3286w[2..2] & w_data3138w[2..2]), (w_anode3286w[1..1] & (! w_data3138w[1..1])), (w_anode3286w[0..0] & (! w_data3138w[0..0])), w_anode3238w[1..1]);
	w_anode3296w[] = ( (w_anode3296w[2..2] & w_data3138w[2..2]), (w_anode3296w[1..1] & (! w_data3138w[1..1])), (w_anode3296w[0..0] & w_data3138w[0..0]), w_anode3238w[1..1]);
	w_anode3306w[] = ( (w_anode3306w[2..2] & w_data3138w[2..2]), (w_anode3306w[1..1] & w_data3138w[1..1]), (w_anode3306w[0..0] & (! w_data3138w[0..0])), w_anode3238w[1..1]);
	w_anode3316w[] = ( (w_anode3316w[2..2] & w_data3138w[2..2]), (w_anode3316w[1..1] & w_data3138w[1..1]), (w_anode3316w[0..0] & w_data3138w[0..0]), w_anode3238w[1..1]);
	w_data3138w[2..0] = data_wire[2..0];
END;
--VALID FILE
